# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: |
          echo Hello, world!
          echo Adapt new rule.
        

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      - name: echo User info
        run: |
          echo $GITHUB_ACTOR
          
      - name: echo output
        id: output_step
        run: |
          passed="PASS"
          echo "::set-output name=passed::$passed"
          
      - name: test 
        env:
          passed: ${{ steps.output_step.outputs.passed }}
        if: ${{  env.passed == 'PASS' }}
        run: |
          echo "env.passed = ${{env.passed}}"
          echo "pass"
          
      - name: reverse step
        env: 
          passed: ${{ steps.output_step.outputs.passed }} 
        if: ${{  env.passed == 'FAIL' }}
        run: |
          echo "env.passed = ${{env.passed}}"
          echo "fail"
          
      - name: case check
        env: 
          passed: ${{ steps.output_step.outputs.passed }} 
        run: |
          echo "env.passed = ${{env.passed}}"
          case ${{ env.passed }} in 
            PASS)
              echo "PASS"
              ;;
            FAIL)
              echo "FAIL"
              ;;
            *)
              echo "default"
              ;;
          esac

  test-job:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: test1
        env: 
          THRESHOLD: ${{ 0.25 }}
        run: |
          echo line1 >> this.txt
          echo line2 >> this.txt
          echo line3 >> this.txt 
          echo line4 >> this.txt
          succeed=2
          total=$(cat this.txt | wc -l)
          threshold=$(echo "scale=0;${{env.THRESHOLD}}*$total" | bc)
          echo "total=$total" 
          echo "threshold=$threshold"
          if [ `echo "$succeed >= $threshold" | bc` -eq 1 ] ; then 
            echo "test1 passed" 
          else
            echo "test1 failed"
          fi 
      
      - name: eval 
        env: 
          path: ${PATH}/this.txt
        run: |
          this=$(echo ${{env.path}} | xargs eval)
          echo $this
      
        

